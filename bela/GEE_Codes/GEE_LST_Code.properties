// Code to extract LST for all years 1985-2022 for Amazon Basin using Landsat data
// Bela Starinchak 
// August 29, 2023

// Define your desired geometry (below are the coordinates for a rectangle boundary of Mato Grosso)
var MG = ee.Geometry.Rectangle([-61.725782, -17.992794, -50.000812, -7.354092]); //add whatever geometry within the amazon basin
 
 // A function that scales and masks Landsat 8 (C2) surface reflectance images.
  function prepSrL8(image) {
  // Bit 0 - Fill
  // Bit 1 - Dilated Cloud
  // Bit 2 - Cirrus
  // Bit 3 - Cloud
  // Bit 4 - Cloud Shadow
  
    // Develop masks for unwanted pixels (fill, cloud, cloud shadow).
    var qaMask = image.select('QA_PIXEL').bitwiseAnd(parseInt('11111', 2)).eq(0);
    //this is what is used ,this is cloud mask
    var saturationMask = image.select('QA_RADSAT').eq(0);//0=no saturation
  
    // Apply the scaling factors to the appropriate bands.
    var getFactorImg = function(factorNames) {
      var factorList = image.toDictionary().select(factorNames).values();
      return ee.Image.constant(factorList);
    };
    var scaleImg = getFactorImg(['REFLECTANCE_MULT_BAND_.|TEMPERATURE_MULT_BAND_ST_B10']);
    var offsetImg = getFactorImg(['REFLECTANCE_ADD_BAND_.|TEMPERATURE_ADD_BAND_ST_B10']);
    var scaled = image.select('SR_B.|ST_B10').multiply(scaleImg).add(offsetImg);
  
    // Replace original bands with scaled bands and apply masks.
    return image.addBands(scaled, null, true).updateMask(qaMask).updateMask(saturationMask);
  }
  
  
  //scale function for landsat 4,5,7
  function maskL457sr(image) {
    // Bit 0 - Fill
    // Bit 1 - Dilated Cloud
    // Bit 2 - Unused
    // Bit 3 - Cloud
    // Bit 4 - Cloud Shadow
    var qaMask = image.select('QA_PIXEL').bitwiseAnd(parseInt('11111', 2)).eq(0);
    var saturationMask = image.select('QA_RADSAT').eq(0);
  
    // Apply the scaling factors to the appropriate bands.
    var opticalBands = image.select('SR_B.').multiply(0.0000275).add(-0.2);
    var thermalBand = image.select('ST_B6').multiply(0.00341802).add(149.0);
  
    // Replace the original bands with the scaled ones and apply the masks.
    return image.addBands(opticalBands, null, true)
        .addBands(thermalBand, null, true)
        .updateMask(qaMask)
        .updateMask(saturationMask);
  }

    //select year
    var selectyear = 2020
    
    // Landsat 8 Collection 2 surface reflectance images of interest:2013-2020
    var LSTcol = ee.ImageCollection('LANDSAT/LC08/C02/T1_L2')
        .filterBounds(MG)
        .filterDate(selectyear+'-07-01', selectyear+'-10-30')
        .filter(ee.Filter.lt('CLOUD_COVER', 50))
        .map(prepSrL8).select('ST_B10')
        .reduce(ee.Reducer.percentile([95]))
        
      Map.addLayer(LSTcol, {min: 295,max: 320, palette:['blue', 'cyan', 'green', 'yellow', 'red']}, 'LST8');
     
      
Export.image.toDrive({
  image: LSTcol,
  description: 'LST_MG_2020',
  scale: 30,
  region: MG,
  fileFormat: 'GeoTIFF',
  maxPixels: 2000000000
});

      /*
      //Landsat 7,2000-2012
      
       var LSTcol= ee.ImageCollection('LANDSAT/LE07/C02/T1_L2')
       .filterBounds(geometry)
       .filterDate(selectyear+'-07-01', selectyear+'-10-30')
       .filter(ee.Filter.lt('CLOUD_COVER', 50))//will reduce image numbers
        .map(maskL457sr).select('ST_B6')
        .reduce(ee.Reducer.percentile([95]))
        
      Map.addLayer(LSTcol, {min: 295,max: 320, palette:['blue', 'cyan', 'green', 'yellow', 'red']}, 'LST8');
       */   
       
       
       /*
      //landsat 5,1985-1999
       var LSTcol= ee.ImageCollection('LANDSAT/LT05/C02/T1_L2')
       .filterBounds(geometry)
       .filterDate(selectyear+'-07-01', selectyear+'-10-30')
       .filter(ee.Filter.lt('CLOUD_COVER', 50))//will reduce image numbers
        .map(maskL457sr).select('ST_B6')
        .reduce(ee.Reducer.percentile([95]))
        
      Map.addLayer(LSTcol, {min: 295,max: 320, palette:['blue', 'cyan', 'green', 'yellow', 'red']}, 'LST8');
      */